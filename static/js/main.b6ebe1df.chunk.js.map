{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectUser","userId","input","handleChange","select","handleSelectChange","className","htmlFor","type","name","id","value","onChange","map","todo","classNames","completed","checked","title","onClick","getData","url","fetch","then","response","json","CurrentUser","state","user","this","loadUser","prevProps","props","a","setState","email","phone","removeUser","React","Component","App","selectedUserId","handleClear","event","target","getPreparedTodos","inputCase","toLowerCase","preparedTodos","filter","includes","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6ebe1df.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  todos: Todo[],\n  selectUser: (userId: number) => void,\n  userId: number,\n  input: string,\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  handleSelectChange: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  select: string,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectUser,\n  userId,\n  input,\n  handleChange,\n  select,\n  handleSelectChange,\n}) => (\n\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n    <label htmlFor=\"input\">\n      Filter by Title:\n      {' '}\n      <input\n        type=\"text\"\n        name=\"input\"\n        id=\"input\"\n        value={input}\n        onChange={handleChange}\n      />\n      {'  '}\n      <select\n        name=\"select\"\n        value={select}\n        onChange={handleSelectChange}\n      >\n        <option value=\"all\">All</option>\n        <option value=\"completed\">Completed</option>\n        <option value=\"not\">Not completed</option>\n      </select>\n    </label>\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            className={classNames('TodoList__item', {\n              'TodoList__item--unchecked': !todo.completed,\n              'TodoList__item--checked': todo.completed,\n            })}\n            key={todo.id}\n          >\n            <label htmlFor={`${todo.id}`}>\n              <input\n                type=\"checkbox\"\n                id={`${todo.id}`}\n                checked={todo.completed}\n\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className={classNames(\n                'TodoList__user-button',\n                'button',\n                { 'TodoList__user- button--selected': todo.userId === userId },\n              )}\n              type=\"button\"\n              onClick={() => selectUser(todo.userId)}\n            >\n              User #\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n\n      </ul>\n    </div>\n  </div>\n);\n","const API_URL = 'https://mate.academy/students-api/';\n\nconst getData = (url: string) => {\n  return fetch(`${API_URL}${url}`)\n    .then(response => response.json());\n};\n\nexport const getAllTodos = (): Promise<Todo[]> => getData('todos');\n\nexport const getUser = (userId: number): Promise<User> => getData(`users/${userId}`);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api';\n\ntype Props = {\n  userId: number,\n  removeUser: () => void;\n};\n\ntype State = {\n  user: User | null,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const user: User = await getUser(this.props.userId);\n\n    this.setState({\n      user,\n    });\n  }\n\n  render() {\n    if (!this.state.user) {\n      return (\n        <span>\n          No user\n        </span>\n      );\n    }\n\n    const {\n      name,\n      id,\n      email,\n      phone,\n    } = this.state.user;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">\n          {name}\n        </h3>\n        <p className=\"CurrentUser__email\">\n          {email}\n        </p>\n        <p className=\"CurrentUser__phone\">\n          {phone}\n        </p>\n        <button\n          type=\"button\"\n          onClick={this.props.removeUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './api';\n\ninterface State {\n  todos: Todo [];\n  selectedUserId: number;\n  input: string,\n  select: string,\n\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    todos: [],\n    selectedUserId: 0,\n    input: '',\n    select: '',\n  };\n\n  async componentDidMount() {\n    const todosFromServer = await getAllTodos();\n\n    this.setState({\n      todos: todosFromServer,\n    });\n  }\n\n  handleClear = () => {\n    this.selectUser(0);\n  };\n\n  selectUser = (userId: number) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      input: value,\n    });\n  };\n\n  handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    this.setState({\n      select: value,\n    });\n  };\n\n  getPreparedTodos = () => {\n    const { todos, input, select } = this.state;\n    const inputCase = input.toLowerCase();\n\n    let preparedTodos = [...todos];\n\n    if (input) {\n      preparedTodos = todos.filter(todo => todo.title.toLowerCase().includes(inputCase));\n    }\n\n    switch (select) {\n      case 'completed':\n        return preparedTodos.filter(todo => todo.completed);\n      case 'not':\n        return preparedTodos.filter(todo => !todo.completed);\n      default:\n        return preparedTodos;\n    }\n  };\n\n  render() {\n    const {\n      selectedUserId,\n      select,\n      input,\n\n    } = this.state;\n\n    const preparedTodos = this.getPreparedTodos();\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            select={select}\n            handleChange={this.handleChange}\n            handleSelectChange={this.handleSelectChange}\n            input={input}\n            todos={preparedTodos}\n            selectUser={this.selectUser}\n            userId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                removeUser={this.handleClear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}